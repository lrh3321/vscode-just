// Generated from JustfileLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
import JustfileLexerBase from './JustfileLexerBase';

export default class JustfileLexer extends JustfileLexerBase {
	public static readonly Set = 1;
	public static readonly Alias = 2;
	public static readonly Import = 3;
	public static readonly Export = 4;
	public static readonly Mod = 5;
	public static readonly True = 6;
	public static readonly False = 7;
	public static readonly If = 8;
	public static readonly Else = 9;
	public static readonly EqualsEquals = 10;
	public static readonly EqualsTilde = 11;
	public static readonly NotEquals = 12;
	public static readonly SheBang = 13;
	public static readonly Assign = 14;
	public static readonly LogicalAND = 15;
	public static readonly Star = 16;
	public static readonly Plus = 17;
	public static readonly Sharp = 18;
	public static readonly Colon = 19;
	public static readonly Comm = 20;
	public static readonly LeftBracket = 21;
	public static readonly RightBracket = 22;
	public static readonly DoubleLeftBrace = 23;
	public static readonly DoubleRightBrace = 24;
	public static readonly LeftBrace = 25;
	public static readonly RightBrace = 26;
	public static readonly LeftParen = 27;
	public static readonly RightParen = 28;
	public static readonly At = 29;
	public static readonly Divide = 30;
	public static readonly Slash = 31;
	public static readonly Dollar = 32;
	public static readonly Equal = 33;
	public static readonly Question = 34;
	public static readonly AllowDuplicateRecipesSetting = 35;
	public static readonly DotenvLoadSetting = 36;
	public static readonly FallbackSetting = 37;
	public static readonly IgnoreCommentsSetting = 38;
	public static readonly PositionalArgumentsSetting = 39;
	public static readonly QuietSetting = 40;
	public static readonly WindowsPowershellSetting = 41;
	public static readonly DotenvFilenameSetting = 42;
	public static readonly DotenvPathSetting = 43;
	public static readonly TempdirSetting = 44;
	public static readonly ShellSetting = 45;
	public static readonly WindowsShellSetting = 46;
	public static readonly COMMENT = 47;
	public static readonly INDENTED_BACKTICK = 48;
	public static readonly BACKTICK = 49;
	public static readonly INDENT = 50;
	public static readonly NAME = 51;
	public static readonly NEWLINE = 52;
	public static readonly INDENTED_RAW_STRING = 53;
	public static readonly INDENTED_STRING = 54;
	public static readonly RAW_STRING = 55;
	public static readonly STRING = 56;
	public static readonly LINE_PREFIX = 57;
	public static readonly WS = 58;
	public static readonly SheBangLine = 59;
	public static readonly Line = 60;
	public static readonly EOF = Token.EOF;
	public static readonly RecipeContent = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'set'", 
                                                            "'alias'", "'import'", 
                                                            "'export'", 
                                                            "'mod'", "'true'", 
                                                            "'false'", "'if'", 
                                                            "'else'", "'=='", 
                                                            "'=~'", "'!='", 
                                                            "'#!'", "':='", 
                                                            "'&&'", "'*'", 
                                                            "'+'", "'#'", 
                                                            "':'", "','", 
                                                            "'['", "']'", 
                                                            "'{{'", "'}}'", 
                                                            "'{'", "'}'", 
                                                            "'('", "')'", 
                                                            "'@'", "'/'", 
                                                            "'\\'", "'$'", 
                                                            "'='", "'?'", 
                                                            "'allow-duplicate-recipes'", 
                                                            "'dotenv-load'", 
                                                            "'fallback'", 
                                                            "'ignore-comments'", 
                                                            "'positional-arguments'", 
                                                            "'quiet'", "'windows-powershell'", 
                                                            "'dotenv-filename'", 
                                                            "'dotenv-path'", 
                                                            "'tempdir'", 
                                                            "'shell'", "'windows-shell'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "Set", 
                                                             "Alias", "Import", 
                                                             "Export", "Mod", 
                                                             "True", "False", 
                                                             "If", "Else", 
                                                             "EqualsEquals", 
                                                             "EqualsTilde", 
                                                             "NotEquals", 
                                                             "SheBang", 
                                                             "Assign", "LogicalAND", 
                                                             "Star", "Plus", 
                                                             "Sharp", "Colon", 
                                                             "Comm", "LeftBracket", 
                                                             "RightBracket", 
                                                             "DoubleLeftBrace", 
                                                             "DoubleRightBrace", 
                                                             "LeftBrace", 
                                                             "RightBrace", 
                                                             "LeftParen", 
                                                             "RightParen", 
                                                             "At", "Divide", 
                                                             "Slash", "Dollar", 
                                                             "Equal", "Question", 
                                                             "AllowDuplicateRecipesSetting", 
                                                             "DotenvLoadSetting", 
                                                             "FallbackSetting", 
                                                             "IgnoreCommentsSetting", 
                                                             "PositionalArgumentsSetting", 
                                                             "QuietSetting", 
                                                             "WindowsPowershellSetting", 
                                                             "DotenvFilenameSetting", 
                                                             "DotenvPathSetting", 
                                                             "TempdirSetting", 
                                                             "ShellSetting", 
                                                             "WindowsShellSetting", 
                                                             "COMMENT", 
                                                             "INDENTED_BACKTICK", 
                                                             "BACKTICK", 
                                                             "INDENT", "NAME", 
                                                             "NEWLINE", 
                                                             "INDENTED_RAW_STRING", 
                                                             "INDENTED_STRING", 
                                                             "RAW_STRING", 
                                                             "STRING", "LINE_PREFIX", 
                                                             "WS", "SheBangLine", 
                                                             "Line" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "RecipeContent", ];

	public static readonly ruleNames: string[] = [
		"Set", "Alias", "Import", "Export", "Mod", "True", "False", "If", "Else", 
		"EqualsEquals", "EqualsTilde", "NotEquals", "SheBang", "Assign", "LogicalAND", 
		"Star", "Plus", "Sharp", "Colon", "Comm", "LeftBracket", "RightBracket", 
		"DoubleLeftBrace", "DoubleRightBrace", "LeftBrace", "RightBrace", "LeftParen", 
		"RightParen", "At", "Divide", "Slash", "Dollar", "Equal", "Question", 
		"TriQuote", "TriSingleQuote", "Quote", "SingleQuote", "AllowDuplicateRecipesSetting", 
		"DotenvLoadSetting", "FallbackSetting", "IgnoreCommentsSetting", "PositionalArgumentsSetting", 
		"QuietSetting", "WindowsPowershellSetting", "DotenvFilenameSetting", "DotenvPathSetting", 
		"TempdirSetting", "ShellSetting", "WindowsShellSetting", "COMMENT", "INDENTED_BACKTICK", 
		"BACKTICK", "INDENT", "NAME", "NEWLINE", "INDENTED_RAW_STRING", "INDENTED_STRING", 
		"RAW_STRING", "STRING", "LONG_STRING_ITEM", "RN", "EscapeSequence", "HexDigit", 
		"LINE_PREFIX", "WS", "SheBangLine", "Line",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, JustfileLexer._ATN, JustfileLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "JustfileLexer.g4"; }

	public get literalNames(): (string | null)[] { return JustfileLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return JustfileLexer.symbolicNames; }
	public get ruleNames(): string[] { return JustfileLexer.ruleNames; }

	public get serializedATN(): number[] { return JustfileLexer._serializedATN; }

	public get channelNames(): string[] { return JustfileLexer.channelNames; }

	public get modeNames(): string[] { return JustfileLexer.modeNames; }

	// @Override
	public sempred(localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 53:
			return this.INDENT_sempred(localctx, predIndex);
		}
		return true;
	}
	private INDENT_sempred(localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.column == 0 && this.braceDepth == 0;
		}
		return true;
	}

	public static readonly _serializedATN: number[] = [4,0,60,605,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,
	1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,
	1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,
	10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,
	1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,
	22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
	1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,34,1,
	35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
	1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
	38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,
	41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
	1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
	42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,
	1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,
	45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,
	1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,
	47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,5,50,421,
	8,50,10,50,12,50,424,9,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,5,51,433,8,
	51,10,51,12,51,436,9,51,1,51,1,51,1,51,1,51,1,52,1,52,5,52,444,8,52,10,
	52,12,52,447,9,52,1,52,1,52,1,53,1,53,4,53,453,8,53,11,53,12,53,454,1,53,
	4,53,458,8,53,11,53,12,53,459,3,53,462,8,53,1,54,1,54,5,54,466,8,54,10,
	54,12,54,469,9,54,1,55,3,55,472,8,55,1,55,1,55,1,56,1,56,5,56,478,8,56,
	10,56,12,56,481,9,56,1,56,1,56,1,57,1,57,5,57,487,8,57,10,57,12,57,490,
	9,57,1,57,1,57,1,58,1,58,1,58,1,58,3,58,498,8,58,1,58,5,58,501,8,58,10,
	58,12,58,504,9,58,1,58,1,58,1,59,1,59,1,59,1,59,3,59,512,8,59,1,59,5,59,
	515,8,59,10,59,12,59,518,9,59,1,59,1,59,1,60,1,60,1,60,1,60,3,60,526,8,
	60,3,60,528,8,60,1,61,3,61,531,8,61,1,61,1,61,1,62,1,62,1,62,1,62,3,62,
	539,8,62,1,62,3,62,542,8,62,1,62,1,62,1,62,4,62,547,8,62,11,62,12,62,548,
	1,62,1,62,1,62,1,62,1,62,3,62,556,8,62,1,63,1,63,1,64,1,64,1,64,1,64,1,
	64,1,64,3,64,566,8,64,1,65,4,65,569,8,65,11,65,12,65,570,1,65,1,65,1,66,
	1,66,5,66,577,8,66,10,66,12,66,580,9,66,1,66,1,66,1,67,5,67,585,8,67,10,
	67,12,67,588,9,67,1,67,1,67,1,67,5,67,593,8,67,10,67,12,67,596,9,67,1,67,
	5,67,599,8,67,10,67,12,67,602,9,67,1,67,1,67,9,422,434,479,488,502,516,
	578,586,600,0,68,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,
	12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,
	24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,0,72,
	0,74,0,76,0,78,35,80,36,82,37,84,38,86,39,88,40,90,41,92,42,94,43,96,44,
	98,45,100,46,102,47,104,48,106,49,108,50,110,51,112,52,114,53,116,54,118,
	55,120,56,122,0,124,0,126,0,128,0,130,57,132,58,134,59,136,60,2,0,1,12,
	1,0,96,96,3,0,65,90,95,95,97,122,5,0,45,45,48,57,65,90,95,95,97,122,2,0,
	39,39,92,92,2,0,34,34,92,92,1,0,92,92,8,0,34,34,39,39,92,92,98,98,102,102,
	110,110,114,114,116,116,1,0,48,51,1,0,48,55,3,0,48,57,65,70,97,102,2,0,
	9,9,32,32,2,0,10,10,13,13,627,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,
	0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,
	0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,
	0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,
	0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,
	0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,
	0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,
	0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,0,
	0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,104,
	1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,114,1,
	0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,130,1,0,0,0,0,132,1,0,
	0,0,1,134,1,0,0,0,1,136,1,0,0,0,2,138,1,0,0,0,4,142,1,0,0,0,6,148,1,0,0,
	0,8,155,1,0,0,0,10,162,1,0,0,0,12,166,1,0,0,0,14,171,1,0,0,0,16,177,1,0,
	0,0,18,180,1,0,0,0,20,185,1,0,0,0,22,188,1,0,0,0,24,191,1,0,0,0,26,194,
	1,0,0,0,28,197,1,0,0,0,30,200,1,0,0,0,32,203,1,0,0,0,34,205,1,0,0,0,36,
	207,1,0,0,0,38,209,1,0,0,0,40,211,1,0,0,0,42,213,1,0,0,0,44,215,1,0,0,0,
	46,217,1,0,0,0,48,220,1,0,0,0,50,223,1,0,0,0,52,225,1,0,0,0,54,227,1,0,
	0,0,56,229,1,0,0,0,58,231,1,0,0,0,60,233,1,0,0,0,62,235,1,0,0,0,64,237,
	1,0,0,0,66,239,1,0,0,0,68,241,1,0,0,0,70,243,1,0,0,0,72,247,1,0,0,0,74,
	251,1,0,0,0,76,253,1,0,0,0,78,255,1,0,0,0,80,279,1,0,0,0,82,291,1,0,0,0,
	84,300,1,0,0,0,86,316,1,0,0,0,88,337,1,0,0,0,90,343,1,0,0,0,92,362,1,0,
	0,0,94,378,1,0,0,0,96,390,1,0,0,0,98,398,1,0,0,0,100,404,1,0,0,0,102,418,
	1,0,0,0,104,427,1,0,0,0,106,441,1,0,0,0,108,461,1,0,0,0,110,463,1,0,0,0,
	112,471,1,0,0,0,114,475,1,0,0,0,116,484,1,0,0,0,118,493,1,0,0,0,120,507,
	1,0,0,0,122,527,1,0,0,0,124,530,1,0,0,0,126,555,1,0,0,0,128,557,1,0,0,0,
	130,565,1,0,0,0,132,568,1,0,0,0,134,574,1,0,0,0,136,594,1,0,0,0,138,139,
	5,115,0,0,139,140,5,101,0,0,140,141,5,116,0,0,141,3,1,0,0,0,142,143,5,97,
	0,0,143,144,5,108,0,0,144,145,5,105,0,0,145,146,5,97,0,0,146,147,5,115,
	0,0,147,5,1,0,0,0,148,149,5,105,0,0,149,150,5,109,0,0,150,151,5,112,0,0,
	151,152,5,111,0,0,152,153,5,114,0,0,153,154,5,116,0,0,154,7,1,0,0,0,155,
	156,5,101,0,0,156,157,5,120,0,0,157,158,5,112,0,0,158,159,5,111,0,0,159,
	160,5,114,0,0,160,161,5,116,0,0,161,9,1,0,0,0,162,163,5,109,0,0,163,164,
	5,111,0,0,164,165,5,100,0,0,165,11,1,0,0,0,166,167,5,116,0,0,167,168,5,
	114,0,0,168,169,5,117,0,0,169,170,5,101,0,0,170,13,1,0,0,0,171,172,5,102,
	0,0,172,173,5,97,0,0,173,174,5,108,0,0,174,175,5,115,0,0,175,176,5,101,
	0,0,176,15,1,0,0,0,177,178,5,105,0,0,178,179,5,102,0,0,179,17,1,0,0,0,180,
	181,5,101,0,0,181,182,5,108,0,0,182,183,5,115,0,0,183,184,5,101,0,0,184,
	19,1,0,0,0,185,186,5,61,0,0,186,187,5,61,0,0,187,21,1,0,0,0,188,189,5,61,
	0,0,189,190,5,126,0,0,190,23,1,0,0,0,191,192,5,33,0,0,192,193,5,61,0,0,
	193,25,1,0,0,0,194,195,5,35,0,0,195,196,5,33,0,0,196,27,1,0,0,0,197,198,
	5,58,0,0,198,199,5,61,0,0,199,29,1,0,0,0,200,201,5,38,0,0,201,202,5,38,
	0,0,202,31,1,0,0,0,203,204,5,42,0,0,204,33,1,0,0,0,205,206,5,43,0,0,206,
	35,1,0,0,0,207,208,5,35,0,0,208,37,1,0,0,0,209,210,5,58,0,0,210,39,1,0,
	0,0,211,212,5,44,0,0,212,41,1,0,0,0,213,214,5,91,0,0,214,43,1,0,0,0,215,
	216,5,93,0,0,216,45,1,0,0,0,217,218,5,123,0,0,218,219,5,123,0,0,219,47,
	1,0,0,0,220,221,5,125,0,0,221,222,5,125,0,0,222,49,1,0,0,0,223,224,5,123,
	0,0,224,51,1,0,0,0,225,226,5,125,0,0,226,53,1,0,0,0,227,228,5,40,0,0,228,
	55,1,0,0,0,229,230,5,41,0,0,230,57,1,0,0,0,231,232,5,64,0,0,232,59,1,0,
	0,0,233,234,5,47,0,0,234,61,1,0,0,0,235,236,5,92,0,0,236,63,1,0,0,0,237,
	238,5,36,0,0,238,65,1,0,0,0,239,240,5,61,0,0,240,67,1,0,0,0,241,242,5,63,
	0,0,242,69,1,0,0,0,243,244,5,34,0,0,244,245,5,34,0,0,245,246,5,34,0,0,246,
	71,1,0,0,0,247,248,5,39,0,0,248,249,5,39,0,0,249,250,5,39,0,0,250,73,1,
	0,0,0,251,252,5,34,0,0,252,75,1,0,0,0,253,254,5,39,0,0,254,77,1,0,0,0,255,
	256,5,97,0,0,256,257,5,108,0,0,257,258,5,108,0,0,258,259,5,111,0,0,259,
	260,5,119,0,0,260,261,5,45,0,0,261,262,5,100,0,0,262,263,5,117,0,0,263,
	264,5,112,0,0,264,265,5,108,0,0,265,266,5,105,0,0,266,267,5,99,0,0,267,
	268,5,97,0,0,268,269,5,116,0,0,269,270,5,101,0,0,270,271,5,45,0,0,271,272,
	5,114,0,0,272,273,5,101,0,0,273,274,5,99,0,0,274,275,5,105,0,0,275,276,
	5,112,0,0,276,277,5,101,0,0,277,278,5,115,0,0,278,79,1,0,0,0,279,280,5,
	100,0,0,280,281,5,111,0,0,281,282,5,116,0,0,282,283,5,101,0,0,283,284,5,
	110,0,0,284,285,5,118,0,0,285,286,5,45,0,0,286,287,5,108,0,0,287,288,5,
	111,0,0,288,289,5,97,0,0,289,290,5,100,0,0,290,81,1,0,0,0,291,292,5,102,
	0,0,292,293,5,97,0,0,293,294,5,108,0,0,294,295,5,108,0,0,295,296,5,98,0,
	0,296,297,5,97,0,0,297,298,5,99,0,0,298,299,5,107,0,0,299,83,1,0,0,0,300,
	301,5,105,0,0,301,302,5,103,0,0,302,303,5,110,0,0,303,304,5,111,0,0,304,
	305,5,114,0,0,305,306,5,101,0,0,306,307,5,45,0,0,307,308,5,99,0,0,308,309,
	5,111,0,0,309,310,5,109,0,0,310,311,5,109,0,0,311,312,5,101,0,0,312,313,
	5,110,0,0,313,314,5,116,0,0,314,315,5,115,0,0,315,85,1,0,0,0,316,317,5,
	112,0,0,317,318,5,111,0,0,318,319,5,115,0,0,319,320,5,105,0,0,320,321,5,
	116,0,0,321,322,5,105,0,0,322,323,5,111,0,0,323,324,5,110,0,0,324,325,5,
	97,0,0,325,326,5,108,0,0,326,327,5,45,0,0,327,328,5,97,0,0,328,329,5,114,
	0,0,329,330,5,103,0,0,330,331,5,117,0,0,331,332,5,109,0,0,332,333,5,101,
	0,0,333,334,5,110,0,0,334,335,5,116,0,0,335,336,5,115,0,0,336,87,1,0,0,
	0,337,338,5,113,0,0,338,339,5,117,0,0,339,340,5,105,0,0,340,341,5,101,0,
	0,341,342,5,116,0,0,342,89,1,0,0,0,343,344,5,119,0,0,344,345,5,105,0,0,
	345,346,5,110,0,0,346,347,5,100,0,0,347,348,5,111,0,0,348,349,5,119,0,0,
	349,350,5,115,0,0,350,351,5,45,0,0,351,352,5,112,0,0,352,353,5,111,0,0,
	353,354,5,119,0,0,354,355,5,101,0,0,355,356,5,114,0,0,356,357,5,115,0,0,
	357,358,5,104,0,0,358,359,5,101,0,0,359,360,5,108,0,0,360,361,5,108,0,0,
	361,91,1,0,0,0,362,363,5,100,0,0,363,364,5,111,0,0,364,365,5,116,0,0,365,
	366,5,101,0,0,366,367,5,110,0,0,367,368,5,118,0,0,368,369,5,45,0,0,369,
	370,5,102,0,0,370,371,5,105,0,0,371,372,5,108,0,0,372,373,5,101,0,0,373,
	374,5,110,0,0,374,375,5,97,0,0,375,376,5,109,0,0,376,377,5,101,0,0,377,
	93,1,0,0,0,378,379,5,100,0,0,379,380,5,111,0,0,380,381,5,116,0,0,381,382,
	5,101,0,0,382,383,5,110,0,0,383,384,5,118,0,0,384,385,5,45,0,0,385,386,
	5,112,0,0,386,387,5,97,0,0,387,388,5,116,0,0,388,389,5,104,0,0,389,95,1,
	0,0,0,390,391,5,116,0,0,391,392,5,101,0,0,392,393,5,109,0,0,393,394,5,112,
	0,0,394,395,5,100,0,0,395,396,5,105,0,0,396,397,5,114,0,0,397,97,1,0,0,
	0,398,399,5,115,0,0,399,400,5,104,0,0,400,401,5,101,0,0,401,402,5,108,0,
	0,402,403,5,108,0,0,403,99,1,0,0,0,404,405,5,119,0,0,405,406,5,105,0,0,
	406,407,5,110,0,0,407,408,5,100,0,0,408,409,5,111,0,0,409,410,5,119,0,0,
	410,411,5,115,0,0,411,412,5,45,0,0,412,413,5,115,0,0,413,414,5,104,0,0,
	414,415,5,101,0,0,415,416,5,108,0,0,416,417,5,108,0,0,417,101,1,0,0,0,418,
	422,3,36,17,0,419,421,9,0,0,0,420,419,1,0,0,0,421,424,1,0,0,0,422,423,1,
	0,0,0,422,420,1,0,0,0,423,425,1,0,0,0,424,422,1,0,0,0,425,426,3,112,55,
	0,426,103,1,0,0,0,427,428,5,96,0,0,428,429,5,96,0,0,429,430,5,96,0,0,430,
	434,1,0,0,0,431,433,9,0,0,0,432,431,1,0,0,0,433,436,1,0,0,0,434,435,1,0,
	0,0,434,432,1,0,0,0,435,437,1,0,0,0,436,434,1,0,0,0,437,438,5,96,0,0,438,
	439,5,96,0,0,439,440,5,96,0,0,440,105,1,0,0,0,441,445,5,96,0,0,442,444,
	8,0,0,0,443,442,1,0,0,0,444,447,1,0,0,0,445,443,1,0,0,0,445,446,1,0,0,0,
	446,448,1,0,0,0,447,445,1,0,0,0,448,449,5,96,0,0,449,107,1,0,0,0,450,452,
	4,53,0,0,451,453,5,32,0,0,452,451,1,0,0,0,453,454,1,0,0,0,454,452,1,0,0,
	0,454,455,1,0,0,0,455,462,1,0,0,0,456,458,5,9,0,0,457,456,1,0,0,0,458,459,
	1,0,0,0,459,457,1,0,0,0,459,460,1,0,0,0,460,462,1,0,0,0,461,450,1,0,0,0,
	461,457,1,0,0,0,462,109,1,0,0,0,463,467,7,1,0,0,464,466,7,2,0,0,465,464,
	1,0,0,0,466,469,1,0,0,0,467,465,1,0,0,0,467,468,1,0,0,0,468,111,1,0,0,0,
	469,467,1,0,0,0,470,472,5,13,0,0,471,470,1,0,0,0,471,472,1,0,0,0,472,473,
	1,0,0,0,473,474,5,10,0,0,474,113,1,0,0,0,475,479,3,72,35,0,476,478,3,122,
	60,0,477,476,1,0,0,0,478,481,1,0,0,0,479,480,1,0,0,0,479,477,1,0,0,0,480,
	482,1,0,0,0,481,479,1,0,0,0,482,483,3,72,35,0,483,115,1,0,0,0,484,488,3,
	70,34,0,485,487,3,122,60,0,486,485,1,0,0,0,487,490,1,0,0,0,488,489,1,0,
	0,0,488,486,1,0,0,0,489,491,1,0,0,0,490,488,1,0,0,0,491,492,3,70,34,0,492,
	117,1,0,0,0,493,502,5,39,0,0,494,497,5,92,0,0,495,498,3,124,61,0,496,498,
	9,0,0,0,497,495,1,0,0,0,497,496,1,0,0,0,498,501,1,0,0,0,499,501,8,3,0,0,
	500,494,1,0,0,0,500,499,1,0,0,0,501,504,1,0,0,0,502,503,1,0,0,0,502,500,
	1,0,0,0,503,505,1,0,0,0,504,502,1,0,0,0,505,506,5,39,0,0,506,119,1,0,0,
	0,507,516,5,34,0,0,508,511,5,92,0,0,509,512,3,124,61,0,510,512,9,0,0,0,
	511,509,1,0,0,0,511,510,1,0,0,0,512,515,1,0,0,0,513,515,8,4,0,0,514,508,
	1,0,0,0,514,513,1,0,0,0,515,518,1,0,0,0,516,517,1,0,0,0,516,514,1,0,0,0,
	517,519,1,0,0,0,518,516,1,0,0,0,519,520,5,34,0,0,520,121,1,0,0,0,521,528,
	8,5,0,0,522,525,5,92,0,0,523,526,3,124,61,0,524,526,9,0,0,0,525,523,1,0,
	0,0,525,524,1,0,0,0,526,528,1,0,0,0,527,521,1,0,0,0,527,522,1,0,0,0,528,
	123,1,0,0,0,529,531,5,13,0,0,530,529,1,0,0,0,530,531,1,0,0,0,531,532,1,
	0,0,0,532,533,5,10,0,0,533,125,1,0,0,0,534,535,5,92,0,0,535,556,7,6,0,0,
	536,541,5,92,0,0,537,539,7,7,0,0,538,537,1,0,0,0,538,539,1,0,0,0,539,540,
	1,0,0,0,540,542,7,8,0,0,541,538,1,0,0,0,541,542,1,0,0,0,542,543,1,0,0,0,
	543,556,7,8,0,0,544,546,5,92,0,0,545,547,5,117,0,0,546,545,1,0,0,0,547,
	548,1,0,0,0,548,546,1,0,0,0,548,549,1,0,0,0,549,550,1,0,0,0,550,551,3,128,
	63,0,551,552,3,128,63,0,552,553,3,128,63,0,553,554,3,128,63,0,554,556,1,
	0,0,0,555,534,1,0,0,0,555,536,1,0,0,0,555,544,1,0,0,0,556,127,1,0,0,0,557,
	558,7,9,0,0,558,129,1,0,0,0,559,560,5,64,0,0,560,566,5,45,0,0,561,562,5,
	45,0,0,562,566,5,64,0,0,563,566,3,58,28,0,564,566,5,45,0,0,565,559,1,0,
	0,0,565,561,1,0,0,0,565,563,1,0,0,0,565,564,1,0,0,0,566,131,1,0,0,0,567,
	569,7,10,0,0,568,567,1,0,0,0,569,570,1,0,0,0,570,568,1,0,0,0,570,571,1,
	0,0,0,571,572,1,0,0,0,572,573,6,65,0,0,573,133,1,0,0,0,574,578,3,26,12,
	0,575,577,8,11,0,0,576,575,1,0,0,0,577,580,1,0,0,0,578,579,1,0,0,0,578,
	576,1,0,0,0,579,581,1,0,0,0,580,578,1,0,0,0,581,582,3,112,55,0,582,135,
	1,0,0,0,583,585,8,11,0,0,584,583,1,0,0,0,585,588,1,0,0,0,586,587,1,0,0,
	0,586,584,1,0,0,0,587,589,1,0,0,0,588,586,1,0,0,0,589,590,3,62,30,0,590,
	591,3,112,55,0,591,593,1,0,0,0,592,586,1,0,0,0,593,596,1,0,0,0,594,592,
	1,0,0,0,594,595,1,0,0,0,595,600,1,0,0,0,596,594,1,0,0,0,597,599,8,11,0,
	0,598,597,1,0,0,0,599,602,1,0,0,0,600,601,1,0,0,0,600,598,1,0,0,0,601,603,
	1,0,0,0,602,600,1,0,0,0,603,604,3,112,55,0,604,137,1,0,0,0,31,0,1,422,434,
	445,454,459,461,467,471,479,488,497,500,502,511,514,516,525,527,530,538,
	541,548,555,565,570,578,586,594,600,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JustfileLexer.__ATN) {
			JustfileLexer.__ATN = new ATNDeserializer().deserialize(JustfileLexer._serializedATN);
		}

		return JustfileLexer.__ATN;
	}


	static DecisionsToDFA = JustfileLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}