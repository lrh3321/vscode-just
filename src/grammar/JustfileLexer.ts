// Generated from JustfileLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
import JustfileLexerBase from './JustfileLexerBase';

export default class JustfileLexer extends JustfileLexerBase {
	public static readonly Set = 1;
	public static readonly Alias = 2;
	public static readonly Import = 3;
	public static readonly Export = 4;
	public static readonly Mod = 5;
	public static readonly True = 6;
	public static readonly False = 7;
	public static readonly If = 8;
	public static readonly Else = 9;
	public static readonly EqualsEquals = 10;
	public static readonly EqualsTilde = 11;
	public static readonly NotEquals = 12;
	public static readonly SheBang = 13;
	public static readonly Assign = 14;
	public static readonly LogicalAND = 15;
	public static readonly Star = 16;
	public static readonly Plus = 17;
	public static readonly Sharp = 18;
	public static readonly Colon = 19;
	public static readonly Comm = 20;
	public static readonly LeftBracket = 21;
	public static readonly RightBracket = 22;
	public static readonly DoubleLeftBrace = 23;
	public static readonly DoubleRightBrace = 24;
	public static readonly LeftBrace = 25;
	public static readonly RightBrace = 26;
	public static readonly LeftParen = 27;
	public static readonly RightParen = 28;
	public static readonly At = 29;
	public static readonly Divide = 30;
	public static readonly Slash = 31;
	public static readonly Dollar = 32;
	public static readonly Equal = 33;
	public static readonly Question = 34;
	public static readonly AllowDuplicateRecipesSetting = 35;
	public static readonly AllowDuplicateVariablesSetting = 36;
	public static readonly DotenvLoadSetting = 37;
	public static readonly FallbackSetting = 38;
	public static readonly IgnoreCommentsSetting = 39;
	public static readonly PositionalArgumentsSetting = 40;
	public static readonly QuietSetting = 41;
	public static readonly WindowsPowershellSetting = 42;
	public static readonly DotenvFilenameSetting = 43;
	public static readonly DotenvPathSetting = 44;
	public static readonly DotenvRequiredSetting = 45;
	public static readonly TempdirSetting = 46;
	public static readonly ShellSetting = 47;
	public static readonly WindowsShellSetting = 48;
	public static readonly COMMENT = 49;
	public static readonly INDENTED_BACKTICK = 50;
	public static readonly BACKTICK = 51;
	public static readonly INDENT = 52;
	public static readonly NAME = 53;
	public static readonly NEWLINE = 54;
	public static readonly INDENTED_RAW_STRING = 55;
	public static readonly INDENTED_STRING = 56;
	public static readonly RAW_STRING = 57;
	public static readonly STRING = 58;
	public static readonly LINE_PREFIX = 59;
	public static readonly WS = 60;
	public static readonly SheBangLine = 61;
	public static readonly Line = 62;
	public static readonly EOF = Token.EOF;
	public static readonly RecipeContent = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'set'", 
                                                            "'alias'", "'import'", 
                                                            "'export'", 
                                                            "'mod'", "'true'", 
                                                            "'false'", "'if'", 
                                                            "'else'", "'=='", 
                                                            "'=~'", "'!='", 
                                                            "'#!'", "':='", 
                                                            "'&&'", "'*'", 
                                                            "'+'", "'#'", 
                                                            "':'", "','", 
                                                            "'['", "']'", 
                                                            "'{{'", "'}}'", 
                                                            "'{'", "'}'", 
                                                            "'('", "')'", 
                                                            "'@'", "'/'", 
                                                            "'\\'", "'$'", 
                                                            "'='", "'?'", 
                                                            "'allow-duplicate-recipes'", 
                                                            "'allow-duplicate-variables'", 
                                                            "'dotenv-load'", 
                                                            "'fallback'", 
                                                            "'ignore-comments'", 
                                                            "'positional-arguments'", 
                                                            "'quiet'", "'windows-powershell'", 
                                                            "'dotenv-filename'", 
                                                            "'dotenv-path'", 
                                                            "'dotenv-required'", 
                                                            "'tempdir'", 
                                                            "'shell'", "'windows-shell'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "Set", 
                                                             "Alias", "Import", 
                                                             "Export", "Mod", 
                                                             "True", "False", 
                                                             "If", "Else", 
                                                             "EqualsEquals", 
                                                             "EqualsTilde", 
                                                             "NotEquals", 
                                                             "SheBang", 
                                                             "Assign", "LogicalAND", 
                                                             "Star", "Plus", 
                                                             "Sharp", "Colon", 
                                                             "Comm", "LeftBracket", 
                                                             "RightBracket", 
                                                             "DoubleLeftBrace", 
                                                             "DoubleRightBrace", 
                                                             "LeftBrace", 
                                                             "RightBrace", 
                                                             "LeftParen", 
                                                             "RightParen", 
                                                             "At", "Divide", 
                                                             "Slash", "Dollar", 
                                                             "Equal", "Question", 
                                                             "AllowDuplicateRecipesSetting", 
                                                             "AllowDuplicateVariablesSetting", 
                                                             "DotenvLoadSetting", 
                                                             "FallbackSetting", 
                                                             "IgnoreCommentsSetting", 
                                                             "PositionalArgumentsSetting", 
                                                             "QuietSetting", 
                                                             "WindowsPowershellSetting", 
                                                             "DotenvFilenameSetting", 
                                                             "DotenvPathSetting", 
                                                             "DotenvRequiredSetting", 
                                                             "TempdirSetting", 
                                                             "ShellSetting", 
                                                             "WindowsShellSetting", 
                                                             "COMMENT", 
                                                             "INDENTED_BACKTICK", 
                                                             "BACKTICK", 
                                                             "INDENT", "NAME", 
                                                             "NEWLINE", 
                                                             "INDENTED_RAW_STRING", 
                                                             "INDENTED_STRING", 
                                                             "RAW_STRING", 
                                                             "STRING", "LINE_PREFIX", 
                                                             "WS", "SheBangLine", 
                                                             "Line" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "RecipeContent", ];

	public static readonly ruleNames: string[] = [
		"Set", "Alias", "Import", "Export", "Mod", "True", "False", "If", "Else", 
		"EqualsEquals", "EqualsTilde", "NotEquals", "SheBang", "Assign", "LogicalAND", 
		"Star", "Plus", "Sharp", "Colon", "Comm", "LeftBracket", "RightBracket", 
		"DoubleLeftBrace", "DoubleRightBrace", "LeftBrace", "RightBrace", "LeftParen", 
		"RightParen", "At", "Divide", "Slash", "Dollar", "Equal", "Question", 
		"TriQuote", "TriSingleQuote", "Quote", "SingleQuote", "AllowDuplicateRecipesSetting", 
		"AllowDuplicateVariablesSetting", "DotenvLoadSetting", "FallbackSetting", 
		"IgnoreCommentsSetting", "PositionalArgumentsSetting", "QuietSetting", 
		"WindowsPowershellSetting", "DotenvFilenameSetting", "DotenvPathSetting", 
		"DotenvRequiredSetting", "TempdirSetting", "ShellSetting", "WindowsShellSetting", 
		"COMMENT", "INDENTED_BACKTICK", "BACKTICK", "INDENT", "NAME", "NEWLINE", 
		"INDENTED_RAW_STRING", "INDENTED_STRING", "RAW_STRING", "STRING", "LONG_STRING_ITEM", 
		"RN", "EscapeSequence", "HexDigit", "LINE_PREFIX", "WS", "SheBangLine", 
		"Line",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, JustfileLexer._ATN, JustfileLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "JustfileLexer.g4"; }

	public get literalNames(): (string | null)[] { return JustfileLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return JustfileLexer.symbolicNames; }
	public get ruleNames(): string[] { return JustfileLexer.ruleNames; }

	public get serializedATN(): number[] { return JustfileLexer._serializedATN; }

	public get channelNames(): string[] { return JustfileLexer.channelNames; }

	public get modeNames(): string[] { return JustfileLexer.modeNames; }

	// @Override
	public sempred(localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 55:
			return this.INDENT_sempred(localctx, predIndex);
		}
		return true;
	}
	private INDENT_sempred(localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.column == 0 && this.braceDepth == 0;
		}
		return true;
	}

	public static readonly _serializedATN: number[] = [4,0,62,651,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,
	1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,
	1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,
	1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,
	1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,
	20,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,
	1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,
	34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,
	1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
	38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
	39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
	1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,
	42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,
	1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,
	43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,
	1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
	46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
	1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,
	48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,
	1,52,5,52,467,8,52,10,52,12,52,470,9,52,1,52,1,52,1,53,1,53,1,53,1,53,1,
	53,5,53,479,8,53,10,53,12,53,482,9,53,1,53,1,53,1,53,1,53,1,54,1,54,5,54,
	490,8,54,10,54,12,54,493,9,54,1,54,1,54,1,55,1,55,4,55,499,8,55,11,55,12,
	55,500,1,55,4,55,504,8,55,11,55,12,55,505,3,55,508,8,55,1,56,1,56,5,56,
	512,8,56,10,56,12,56,515,9,56,1,57,3,57,518,8,57,1,57,1,57,1,58,1,58,5,
	58,524,8,58,10,58,12,58,527,9,58,1,58,1,58,1,59,1,59,5,59,533,8,59,10,59,
	12,59,536,9,59,1,59,1,59,1,60,1,60,1,60,1,60,3,60,544,8,60,1,60,5,60,547,
	8,60,10,60,12,60,550,9,60,1,60,1,60,1,61,1,61,1,61,1,61,3,61,558,8,61,1,
	61,5,61,561,8,61,10,61,12,61,564,9,61,1,61,1,61,1,62,1,62,1,62,1,62,3,62,
	572,8,62,3,62,574,8,62,1,63,3,63,577,8,63,1,63,1,63,1,64,1,64,1,64,1,64,
	3,64,585,8,64,1,64,3,64,588,8,64,1,64,1,64,1,64,4,64,593,8,64,11,64,12,
	64,594,1,64,1,64,1,64,1,64,1,64,3,64,602,8,64,1,65,1,65,1,66,1,66,1,66,
	1,66,1,66,1,66,3,66,612,8,66,1,67,4,67,615,8,67,11,67,12,67,616,1,67,1,
	67,1,68,1,68,5,68,623,8,68,10,68,12,68,626,9,68,1,68,1,68,1,69,5,69,631,
	8,69,10,69,12,69,634,9,69,1,69,1,69,1,69,5,69,639,8,69,10,69,12,69,642,
	9,69,1,69,5,69,645,8,69,10,69,12,69,648,9,69,1,69,1,69,9,468,480,525,534,
	548,562,624,632,646,0,70,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,
	22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,
	46,23,48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,
	70,0,72,0,74,0,76,0,78,35,80,36,82,37,84,38,86,39,88,40,90,41,92,42,94,
	43,96,44,98,45,100,46,102,47,104,48,106,49,108,50,110,51,112,52,114,53,
	116,54,118,55,120,56,122,57,124,58,126,0,128,0,130,0,132,0,134,59,136,60,
	138,61,140,62,2,0,1,12,1,0,96,96,3,0,65,90,95,95,97,122,5,0,45,45,48,57,
	65,90,95,95,97,122,2,0,39,39,92,92,2,0,34,34,92,92,1,0,92,92,8,0,34,34,
	39,39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,51,1,0,48,55,3,
	0,48,57,65,70,97,102,2,0,9,9,32,32,2,0,10,10,13,13,673,0,2,1,0,0,0,0,4,
	1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,
	0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,
	0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,
	0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,
	0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,
	0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,78,1,
	0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,
	0,90,1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,
	1,0,0,0,0,102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,
	0,0,0,0,112,1,0,0,0,0,114,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,
	0,0,0,122,1,0,0,0,0,124,1,0,0,0,0,134,1,0,0,0,0,136,1,0,0,0,1,138,1,0,0,
	0,1,140,1,0,0,0,2,142,1,0,0,0,4,146,1,0,0,0,6,152,1,0,0,0,8,159,1,0,0,0,
	10,166,1,0,0,0,12,170,1,0,0,0,14,175,1,0,0,0,16,181,1,0,0,0,18,184,1,0,
	0,0,20,189,1,0,0,0,22,192,1,0,0,0,24,195,1,0,0,0,26,198,1,0,0,0,28,201,
	1,0,0,0,30,204,1,0,0,0,32,207,1,0,0,0,34,209,1,0,0,0,36,211,1,0,0,0,38,
	213,1,0,0,0,40,215,1,0,0,0,42,217,1,0,0,0,44,219,1,0,0,0,46,221,1,0,0,0,
	48,224,1,0,0,0,50,227,1,0,0,0,52,229,1,0,0,0,54,231,1,0,0,0,56,233,1,0,
	0,0,58,235,1,0,0,0,60,237,1,0,0,0,62,239,1,0,0,0,64,241,1,0,0,0,66,243,
	1,0,0,0,68,245,1,0,0,0,70,247,1,0,0,0,72,251,1,0,0,0,74,255,1,0,0,0,76,
	257,1,0,0,0,78,259,1,0,0,0,80,283,1,0,0,0,82,309,1,0,0,0,84,321,1,0,0,0,
	86,330,1,0,0,0,88,346,1,0,0,0,90,367,1,0,0,0,92,373,1,0,0,0,94,392,1,0,
	0,0,96,408,1,0,0,0,98,420,1,0,0,0,100,436,1,0,0,0,102,444,1,0,0,0,104,450,
	1,0,0,0,106,464,1,0,0,0,108,473,1,0,0,0,110,487,1,0,0,0,112,507,1,0,0,0,
	114,509,1,0,0,0,116,517,1,0,0,0,118,521,1,0,0,0,120,530,1,0,0,0,122,539,
	1,0,0,0,124,553,1,0,0,0,126,573,1,0,0,0,128,576,1,0,0,0,130,601,1,0,0,0,
	132,603,1,0,0,0,134,611,1,0,0,0,136,614,1,0,0,0,138,620,1,0,0,0,140,640,
	1,0,0,0,142,143,5,115,0,0,143,144,5,101,0,0,144,145,5,116,0,0,145,3,1,0,
	0,0,146,147,5,97,0,0,147,148,5,108,0,0,148,149,5,105,0,0,149,150,5,97,0,
	0,150,151,5,115,0,0,151,5,1,0,0,0,152,153,5,105,0,0,153,154,5,109,0,0,154,
	155,5,112,0,0,155,156,5,111,0,0,156,157,5,114,0,0,157,158,5,116,0,0,158,
	7,1,0,0,0,159,160,5,101,0,0,160,161,5,120,0,0,161,162,5,112,0,0,162,163,
	5,111,0,0,163,164,5,114,0,0,164,165,5,116,0,0,165,9,1,0,0,0,166,167,5,109,
	0,0,167,168,5,111,0,0,168,169,5,100,0,0,169,11,1,0,0,0,170,171,5,116,0,
	0,171,172,5,114,0,0,172,173,5,117,0,0,173,174,5,101,0,0,174,13,1,0,0,0,
	175,176,5,102,0,0,176,177,5,97,0,0,177,178,5,108,0,0,178,179,5,115,0,0,
	179,180,5,101,0,0,180,15,1,0,0,0,181,182,5,105,0,0,182,183,5,102,0,0,183,
	17,1,0,0,0,184,185,5,101,0,0,185,186,5,108,0,0,186,187,5,115,0,0,187,188,
	5,101,0,0,188,19,1,0,0,0,189,190,5,61,0,0,190,191,5,61,0,0,191,21,1,0,0,
	0,192,193,5,61,0,0,193,194,5,126,0,0,194,23,1,0,0,0,195,196,5,33,0,0,196,
	197,5,61,0,0,197,25,1,0,0,0,198,199,5,35,0,0,199,200,5,33,0,0,200,27,1,
	0,0,0,201,202,5,58,0,0,202,203,5,61,0,0,203,29,1,0,0,0,204,205,5,38,0,0,
	205,206,5,38,0,0,206,31,1,0,0,0,207,208,5,42,0,0,208,33,1,0,0,0,209,210,
	5,43,0,0,210,35,1,0,0,0,211,212,5,35,0,0,212,37,1,0,0,0,213,214,5,58,0,
	0,214,39,1,0,0,0,215,216,5,44,0,0,216,41,1,0,0,0,217,218,5,91,0,0,218,43,
	1,0,0,0,219,220,5,93,0,0,220,45,1,0,0,0,221,222,5,123,0,0,222,223,5,123,
	0,0,223,47,1,0,0,0,224,225,5,125,0,0,225,226,5,125,0,0,226,49,1,0,0,0,227,
	228,5,123,0,0,228,51,1,0,0,0,229,230,5,125,0,0,230,53,1,0,0,0,231,232,5,
	40,0,0,232,55,1,0,0,0,233,234,5,41,0,0,234,57,1,0,0,0,235,236,5,64,0,0,
	236,59,1,0,0,0,237,238,5,47,0,0,238,61,1,0,0,0,239,240,5,92,0,0,240,63,
	1,0,0,0,241,242,5,36,0,0,242,65,1,0,0,0,243,244,5,61,0,0,244,67,1,0,0,0,
	245,246,5,63,0,0,246,69,1,0,0,0,247,248,5,34,0,0,248,249,5,34,0,0,249,250,
	5,34,0,0,250,71,1,0,0,0,251,252,5,39,0,0,252,253,5,39,0,0,253,254,5,39,
	0,0,254,73,1,0,0,0,255,256,5,34,0,0,256,75,1,0,0,0,257,258,5,39,0,0,258,
	77,1,0,0,0,259,260,5,97,0,0,260,261,5,108,0,0,261,262,5,108,0,0,262,263,
	5,111,0,0,263,264,5,119,0,0,264,265,5,45,0,0,265,266,5,100,0,0,266,267,
	5,117,0,0,267,268,5,112,0,0,268,269,5,108,0,0,269,270,5,105,0,0,270,271,
	5,99,0,0,271,272,5,97,0,0,272,273,5,116,0,0,273,274,5,101,0,0,274,275,5,
	45,0,0,275,276,5,114,0,0,276,277,5,101,0,0,277,278,5,99,0,0,278,279,5,105,
	0,0,279,280,5,112,0,0,280,281,5,101,0,0,281,282,5,115,0,0,282,79,1,0,0,
	0,283,284,5,97,0,0,284,285,5,108,0,0,285,286,5,108,0,0,286,287,5,111,0,
	0,287,288,5,119,0,0,288,289,5,45,0,0,289,290,5,100,0,0,290,291,5,117,0,
	0,291,292,5,112,0,0,292,293,5,108,0,0,293,294,5,105,0,0,294,295,5,99,0,
	0,295,296,5,97,0,0,296,297,5,116,0,0,297,298,5,101,0,0,298,299,5,45,0,0,
	299,300,5,118,0,0,300,301,5,97,0,0,301,302,5,114,0,0,302,303,5,105,0,0,
	303,304,5,97,0,0,304,305,5,98,0,0,305,306,5,108,0,0,306,307,5,101,0,0,307,
	308,5,115,0,0,308,81,1,0,0,0,309,310,5,100,0,0,310,311,5,111,0,0,311,312,
	5,116,0,0,312,313,5,101,0,0,313,314,5,110,0,0,314,315,5,118,0,0,315,316,
	5,45,0,0,316,317,5,108,0,0,317,318,5,111,0,0,318,319,5,97,0,0,319,320,5,
	100,0,0,320,83,1,0,0,0,321,322,5,102,0,0,322,323,5,97,0,0,323,324,5,108,
	0,0,324,325,5,108,0,0,325,326,5,98,0,0,326,327,5,97,0,0,327,328,5,99,0,
	0,328,329,5,107,0,0,329,85,1,0,0,0,330,331,5,105,0,0,331,332,5,103,0,0,
	332,333,5,110,0,0,333,334,5,111,0,0,334,335,5,114,0,0,335,336,5,101,0,0,
	336,337,5,45,0,0,337,338,5,99,0,0,338,339,5,111,0,0,339,340,5,109,0,0,340,
	341,5,109,0,0,341,342,5,101,0,0,342,343,5,110,0,0,343,344,5,116,0,0,344,
	345,5,115,0,0,345,87,1,0,0,0,346,347,5,112,0,0,347,348,5,111,0,0,348,349,
	5,115,0,0,349,350,5,105,0,0,350,351,5,116,0,0,351,352,5,105,0,0,352,353,
	5,111,0,0,353,354,5,110,0,0,354,355,5,97,0,0,355,356,5,108,0,0,356,357,
	5,45,0,0,357,358,5,97,0,0,358,359,5,114,0,0,359,360,5,103,0,0,360,361,5,
	117,0,0,361,362,5,109,0,0,362,363,5,101,0,0,363,364,5,110,0,0,364,365,5,
	116,0,0,365,366,5,115,0,0,366,89,1,0,0,0,367,368,5,113,0,0,368,369,5,117,
	0,0,369,370,5,105,0,0,370,371,5,101,0,0,371,372,5,116,0,0,372,91,1,0,0,
	0,373,374,5,119,0,0,374,375,5,105,0,0,375,376,5,110,0,0,376,377,5,100,0,
	0,377,378,5,111,0,0,378,379,5,119,0,0,379,380,5,115,0,0,380,381,5,45,0,
	0,381,382,5,112,0,0,382,383,5,111,0,0,383,384,5,119,0,0,384,385,5,101,0,
	0,385,386,5,114,0,0,386,387,5,115,0,0,387,388,5,104,0,0,388,389,5,101,0,
	0,389,390,5,108,0,0,390,391,5,108,0,0,391,93,1,0,0,0,392,393,5,100,0,0,
	393,394,5,111,0,0,394,395,5,116,0,0,395,396,5,101,0,0,396,397,5,110,0,0,
	397,398,5,118,0,0,398,399,5,45,0,0,399,400,5,102,0,0,400,401,5,105,0,0,
	401,402,5,108,0,0,402,403,5,101,0,0,403,404,5,110,0,0,404,405,5,97,0,0,
	405,406,5,109,0,0,406,407,5,101,0,0,407,95,1,0,0,0,408,409,5,100,0,0,409,
	410,5,111,0,0,410,411,5,116,0,0,411,412,5,101,0,0,412,413,5,110,0,0,413,
	414,5,118,0,0,414,415,5,45,0,0,415,416,5,112,0,0,416,417,5,97,0,0,417,418,
	5,116,0,0,418,419,5,104,0,0,419,97,1,0,0,0,420,421,5,100,0,0,421,422,5,
	111,0,0,422,423,5,116,0,0,423,424,5,101,0,0,424,425,5,110,0,0,425,426,5,
	118,0,0,426,427,5,45,0,0,427,428,5,114,0,0,428,429,5,101,0,0,429,430,5,
	113,0,0,430,431,5,117,0,0,431,432,5,105,0,0,432,433,5,114,0,0,433,434,5,
	101,0,0,434,435,5,100,0,0,435,99,1,0,0,0,436,437,5,116,0,0,437,438,5,101,
	0,0,438,439,5,109,0,0,439,440,5,112,0,0,440,441,5,100,0,0,441,442,5,105,
	0,0,442,443,5,114,0,0,443,101,1,0,0,0,444,445,5,115,0,0,445,446,5,104,0,
	0,446,447,5,101,0,0,447,448,5,108,0,0,448,449,5,108,0,0,449,103,1,0,0,0,
	450,451,5,119,0,0,451,452,5,105,0,0,452,453,5,110,0,0,453,454,5,100,0,0,
	454,455,5,111,0,0,455,456,5,119,0,0,456,457,5,115,0,0,457,458,5,45,0,0,
	458,459,5,115,0,0,459,460,5,104,0,0,460,461,5,101,0,0,461,462,5,108,0,0,
	462,463,5,108,0,0,463,105,1,0,0,0,464,468,3,36,17,0,465,467,9,0,0,0,466,
	465,1,0,0,0,467,470,1,0,0,0,468,469,1,0,0,0,468,466,1,0,0,0,469,471,1,0,
	0,0,470,468,1,0,0,0,471,472,3,116,57,0,472,107,1,0,0,0,473,474,5,96,0,0,
	474,475,5,96,0,0,475,476,5,96,0,0,476,480,1,0,0,0,477,479,9,0,0,0,478,477,
	1,0,0,0,479,482,1,0,0,0,480,481,1,0,0,0,480,478,1,0,0,0,481,483,1,0,0,0,
	482,480,1,0,0,0,483,484,5,96,0,0,484,485,5,96,0,0,485,486,5,96,0,0,486,
	109,1,0,0,0,487,491,5,96,0,0,488,490,8,0,0,0,489,488,1,0,0,0,490,493,1,
	0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,494,1,0,0,0,493,491,1,0,0,0,494,
	495,5,96,0,0,495,111,1,0,0,0,496,498,4,55,0,0,497,499,5,32,0,0,498,497,
	1,0,0,0,499,500,1,0,0,0,500,498,1,0,0,0,500,501,1,0,0,0,501,508,1,0,0,0,
	502,504,5,9,0,0,503,502,1,0,0,0,504,505,1,0,0,0,505,503,1,0,0,0,505,506,
	1,0,0,0,506,508,1,0,0,0,507,496,1,0,0,0,507,503,1,0,0,0,508,113,1,0,0,0,
	509,513,7,1,0,0,510,512,7,2,0,0,511,510,1,0,0,0,512,515,1,0,0,0,513,511,
	1,0,0,0,513,514,1,0,0,0,514,115,1,0,0,0,515,513,1,0,0,0,516,518,5,13,0,
	0,517,516,1,0,0,0,517,518,1,0,0,0,518,519,1,0,0,0,519,520,5,10,0,0,520,
	117,1,0,0,0,521,525,3,72,35,0,522,524,3,126,62,0,523,522,1,0,0,0,524,527,
	1,0,0,0,525,526,1,0,0,0,525,523,1,0,0,0,526,528,1,0,0,0,527,525,1,0,0,0,
	528,529,3,72,35,0,529,119,1,0,0,0,530,534,3,70,34,0,531,533,3,126,62,0,
	532,531,1,0,0,0,533,536,1,0,0,0,534,535,1,0,0,0,534,532,1,0,0,0,535,537,
	1,0,0,0,536,534,1,0,0,0,537,538,3,70,34,0,538,121,1,0,0,0,539,548,5,39,
	0,0,540,543,5,92,0,0,541,544,3,128,63,0,542,544,9,0,0,0,543,541,1,0,0,0,
	543,542,1,0,0,0,544,547,1,0,0,0,545,547,8,3,0,0,546,540,1,0,0,0,546,545,
	1,0,0,0,547,550,1,0,0,0,548,549,1,0,0,0,548,546,1,0,0,0,549,551,1,0,0,0,
	550,548,1,0,0,0,551,552,5,39,0,0,552,123,1,0,0,0,553,562,5,34,0,0,554,557,
	5,92,0,0,555,558,3,128,63,0,556,558,9,0,0,0,557,555,1,0,0,0,557,556,1,0,
	0,0,558,561,1,0,0,0,559,561,8,4,0,0,560,554,1,0,0,0,560,559,1,0,0,0,561,
	564,1,0,0,0,562,563,1,0,0,0,562,560,1,0,0,0,563,565,1,0,0,0,564,562,1,0,
	0,0,565,566,5,34,0,0,566,125,1,0,0,0,567,574,8,5,0,0,568,571,5,92,0,0,569,
	572,3,128,63,0,570,572,9,0,0,0,571,569,1,0,0,0,571,570,1,0,0,0,572,574,
	1,0,0,0,573,567,1,0,0,0,573,568,1,0,0,0,574,127,1,0,0,0,575,577,5,13,0,
	0,576,575,1,0,0,0,576,577,1,0,0,0,577,578,1,0,0,0,578,579,5,10,0,0,579,
	129,1,0,0,0,580,581,5,92,0,0,581,602,7,6,0,0,582,587,5,92,0,0,583,585,7,
	7,0,0,584,583,1,0,0,0,584,585,1,0,0,0,585,586,1,0,0,0,586,588,7,8,0,0,587,
	584,1,0,0,0,587,588,1,0,0,0,588,589,1,0,0,0,589,602,7,8,0,0,590,592,5,92,
	0,0,591,593,5,117,0,0,592,591,1,0,0,0,593,594,1,0,0,0,594,592,1,0,0,0,594,
	595,1,0,0,0,595,596,1,0,0,0,596,597,3,132,65,0,597,598,3,132,65,0,598,599,
	3,132,65,0,599,600,3,132,65,0,600,602,1,0,0,0,601,580,1,0,0,0,601,582,1,
	0,0,0,601,590,1,0,0,0,602,131,1,0,0,0,603,604,7,9,0,0,604,133,1,0,0,0,605,
	606,5,64,0,0,606,612,5,45,0,0,607,608,5,45,0,0,608,612,5,64,0,0,609,612,
	3,58,28,0,610,612,5,45,0,0,611,605,1,0,0,0,611,607,1,0,0,0,611,609,1,0,
	0,0,611,610,1,0,0,0,612,135,1,0,0,0,613,615,7,10,0,0,614,613,1,0,0,0,615,
	616,1,0,0,0,616,614,1,0,0,0,616,617,1,0,0,0,617,618,1,0,0,0,618,619,6,67,
	0,0,619,137,1,0,0,0,620,624,3,26,12,0,621,623,8,11,0,0,622,621,1,0,0,0,
	623,626,1,0,0,0,624,625,1,0,0,0,624,622,1,0,0,0,625,627,1,0,0,0,626,624,
	1,0,0,0,627,628,3,116,57,0,628,139,1,0,0,0,629,631,8,11,0,0,630,629,1,0,
	0,0,631,634,1,0,0,0,632,633,1,0,0,0,632,630,1,0,0,0,633,635,1,0,0,0,634,
	632,1,0,0,0,635,636,3,62,30,0,636,637,3,116,57,0,637,639,1,0,0,0,638,632,
	1,0,0,0,639,642,1,0,0,0,640,638,1,0,0,0,640,641,1,0,0,0,641,646,1,0,0,0,
	642,640,1,0,0,0,643,645,8,11,0,0,644,643,1,0,0,0,645,648,1,0,0,0,646,647,
	1,0,0,0,646,644,1,0,0,0,647,649,1,0,0,0,648,646,1,0,0,0,649,650,3,116,57,
	0,650,141,1,0,0,0,31,0,1,468,480,491,500,505,507,513,517,525,534,543,546,
	548,557,560,562,571,573,576,584,587,594,601,611,616,624,632,640,646,1,6,
	0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JustfileLexer.__ATN) {
			JustfileLexer.__ATN = new ATNDeserializer().deserialize(JustfileLexer._serializedATN);
		}

		return JustfileLexer.__ATN;
	}


	static DecisionsToDFA = JustfileLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}